
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}
use mysql;
set password='{{.DbPassword}}';

create role if not exists R_DO_IT_ALL;
create role if not exists R_READ_WRITE;
create role if not exists R_READ_ONLY;
create role if not exists R_REPLICATION;
create role if not exists {{.CustomRoleName}};

grant {{.CustomRolePrivileges}} on {{.CustomRoleTarget}} to {{.CustomRoleName}} {{.CustomRoleExtra}};
grant all on *.* to R_DO_IT_ALL;
grant SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,
    SHOW DATABASES,CREATE TEMPORARY TABLES,LOCK TABLES, EXECUTE
    on *.* to R_READ_WRITE;
grant SELECT,EXECUTE on *.* to R_READ_ONLY;
grant REPLICATION SLAVE on *.* to R_REPLICATION;

create user if not exists {{.DbUser}}@'{{.RemoteAccess}}' identified by '{{.DbPassword}}';
create user if not exists {{.DbUser}}@'localhost' identified by '{{.DbPassword}}';

grant {{.DefaultRole}} to {{.DbUser}}@'{{.RemoteAccess}}' ;
set default role {{.DefaultRole}} to {{.DbUser}}@'{{.RemoteAccess}}';

grant {{.DefaultRole}} to {{.DbUser}}@'localhost' ;
set default role {{.DefaultRole}} to {{.DbUser}}@'localhost';

create user if not exists msandbox_rw@'localhost' identified by '{{.DbPassword}}';
create user if not exists msandbox_rw@'{{.RemoteAccess}}' identified by '{{.DbPassword}}';

grant R_READ_WRITE to msandbox_rw@'localhost';
set default role R_READ_WRITE to msandbox_rw@'localhost';
grant R_READ_WRITE to msandbox_rw@'{{.RemoteAccess}}';
set default role R_READ_WRITE to msandbox_rw@'{{.RemoteAccess}}';

create user if not exists msandbox_ro@'{{.RemoteAccess}}' identified by '{{.DbPassword}}';
create user if not exists msandbox_ro@'localhost' identified by '{{.DbPassword}}';
create user if not exists {{.RplUser}}@'{{.RemoteAccess}}' identified by '{{.RplPassword}}';

grant R_READ_ONLY to msandbox_ro@'{{.RemoteAccess}}';
set default role R_READ_ONLY to msandbox_ro@'{{.RemoteAccess}}';

grant R_READ_ONLY to msandbox_ro@'localhost';
set default role R_READ_ONLY to msandbox_ro@'localhost';

grant R_REPLICATION to {{.RplUser}}@'{{.RemoteAccess}}';
set default role R_REPLICATION to {{.RplUser}}@'{{.RemoteAccess}}';

create schema if not exists test;

{{.TaskUserGrants}}
